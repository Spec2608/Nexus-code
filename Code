<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NexusFocus - AI Productivity Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: {
                            100: '#dbeafe',
                            200: '#bfdbfe',
                            300: '#93c5fd',
                            400: '#60a5fa',
                            500: '#3b82f6',
                            600: '#2563eb',
                            700: '#1d4ed8',
                            800: '#1e40af',
                            900: '#1e3a8a',
                        },
                        dark: {
                            100: '#1a1a1a',
                            200: '#141414',
                            300: '#0f0f0f',
                            400: '#0a0a0a',
                            500: '#050505',
                        }
                    }
                }
            }
        }
    </script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        body {
            font-family: 'Inter', sans-serif;
            background-color: #050505;
            color: white;
        }
        
        .gradient-bg {
            background: linear-gradient(135deg, rgba(37, 99, 235, 0.1) 0%, rgba(0, 0, 0, 0) 50%);
        }
        
        .progress-ring__circle {
            transition: stroke-dashoffset 0.35s;
            transform: rotate(-90deg);
            transform-origin: 50% 50%;
        }
        
        .task-item:hover .task-actions {
            opacity: 1;
        }
        
        .pulse-animation {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
            }
        }
        
        .blink {
            animation: blink 1s step-end infinite;
        }
        
        @keyframes blink {
            from, to { opacity: 1 }
            50% { opacity: 0.5 }
        }
    </style>
</head>
<body class="min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <!-- Header -->
        <header class="flex justify-between items-center mb-8">
            <div class="flex items-center space-x-2">
                <div class="w-10 h-10 rounded-full bg-primary-600 flex items-center justify-center">
                    <i class="fas fa-brain text-white text-xl"></i>
                </div>
                <h1 class="text-2xl font-bold bg-gradient-to-r from-primary-400 to-primary-600 bg-clip-text text-transparent">NexusFocus</h1>
            </div>
            <div class="flex items-center space-x-4">
                <div class="relative group">
                    <button class="w-10 h-10 rounded-full bg-dark-300 flex items-center justify-center hover:bg-dark-200 transition">
                        <i class="fas fa-bell text-primary-400"></i>
                        <span class="absolute top-0 right-0 w-2 h-2 bg-red-500 rounded-full"></span>
                    </button>
                    <div class="hidden group-hover:block absolute right-0 mt-2 w-64 bg-dark-300 rounded-lg shadow-lg z-10 p-4">
                        <p class="text-sm">You have 3 unread notifications</p>
                    </div>
                </div>
                <div class="w-10 h-10 rounded-full bg-gradient-to-br from-primary-500 to-primary-700 flex items-center justify-center">
                    <span class="font-medium">JD</span>
                </div>
            </div>
        </header>
        
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Left Column -->
            <div class="lg:col-span-2 space-y-6">
                <!-- Productivity Summary -->
                <div class="gradient-bg rounded-xl p-6 border border-dark-300">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-semibold">Today's Productivity</h2>
                        <span class="text-xs bg-primary-900 text-primary-300 px-2 py-1 rounded-full">AI Analysis</span>
                    </div>
                    
                    <div class="grid grid-cols-3 gap-4 mb-6">
                        <div class="bg-dark-200 rounded-lg p-4">
                            <p class="text-xs text-gray-400 mb-1">Focus Time</p>
                            <p class="text-2xl font-bold">2h 45m</p>
                            <p class="text-xs text-primary-400 mt-1">+12% from yesterday</p>
                        </div>
                        <div class="bg-dark-200 rounded-lg p-4">
                            <p class="text-xs text-gray-400 mb-1">Tasks Completed</p>
                            <p class="text-2xl font-bold">7/12</p>
                            <p class="text-xs text-primary-400 mt-1">58% efficiency</p>
                        </div>
                        <div class="bg-dark-200 rounded-lg p-4">
                            <p class="text-xs text-gray-400 mb-1">Pomodoros</p>
                            <p class="text-2xl font-bold">5</p>
                            <p class="text-xs text-primary-400 mt-1">3.2 avg per day</p>
                        </div>
                    </div>
                    
                    <div class="bg-dark-200 rounded-lg p-4">
                        <div class="flex items-center mb-2">
                            <i class="fas fa-robot text-primary-500 mr-2"></i>
                            <h3 class="font-medium">AI Insights</h3>
                        </div>
                        <p class="text-sm text-gray-300" id="aiSummary">You're most productive between 9-11 AM. Try scheduling your most important tasks during this window. Your focus duration has improved by 12% this week - keep it up!</p>
                        <button id="refreshInsights" class="mt-3 text-xs text-primary-400 hover:text-primary-300 flex items-center">
                            <i class="fas fa-sync-alt mr-1"></i> Generate New Insights
                        </button>
                    </div>
                </div>
                
                <!-- Pomodoro Timer -->
                <div class="gradient-bg rounded-xl p-6 border border-dark-300">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-xl font-semibold">Focus Timer</h2>
                        <div class="flex space-x-2">
                            <button id="pomodoroBtn" class="px-3 py-1 bg-primary-600 text-white rounded-full text-sm font-medium">Pomodoro</button>
                            <button id="shortBreakBtn" class="px-3 py-1 bg-dark-300 text-gray-400 rounded-full text-sm font-medium hover:bg-dark-200">Short Break</button>
                            <button id="longBreakBtn" class="px-3 py-1 bg-dark-300 text-gray-400 rounded-full text-sm font-medium hover:bg-dark-200">Long Break</button>
                        </div>
                    </div>
                    
                    <div class="flex flex-col items-center my-8">
                        <div class="relative w-64 h-64">
                            <svg class="w-full h-full" viewBox="0 0 100 100">
                                <circle class="text-dark-300" stroke-width="8" stroke="currentColor" fill="transparent" r="40" cx="50" cy="50" />
                                <circle id="progress-circle" class="text-primary-600 progress-ring__circle" stroke-width="8" stroke-dasharray="251.2" stroke-dashoffset="0" stroke-linecap="round" stroke="currentColor" fill="transparent" r="40" cx="50" cy="50" />
                            </svg>
                            <div class="absolute inset-0 flex items-center justify-center flex-col">
                                <div id="time-display" class="text-4xl font-bold mb-2">25:00</div>
                                <button id="start-pause-btn" class="px-6 py-2 bg-primary-600 hover:bg-primary-700 rounded-full font-medium flex items-center pulse-animation">
                                    <i class="fas fa-play mr-2"></i> Start
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="flex justify-between items-center">
                        <div class="text-sm text-gray-400">
                            <i class="fas fa-fire-alt text-primary-500 mr-1"></i>
                            <span id="pomodoro-count">0</span> sessions today
                        </div>
                        <button id="skip-btn" class="text-sm text-gray-400 hover:text-gray-300">
                            <i class="fas fa-forward mr-1"></i> Skip
                        </button>
                    </div>
                </div>
                
                <!-- Task List -->
                <div class="gradient-bg rounded-xl p-6 border border-dark-300">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-xl font-semibold">Today's Tasks</h2>
                        <button id="add-task-btn" class="px-3 py-1 bg-primary-600 hover:bg-primary-700 text-white rounded-full text-sm font-medium flex items-center">
                            <i class="fas fa-plus mr-1"></i> Add Task
                        </button>
                    </div>
                    
                    <div class="mb-4">
                        <div class="relative">
                            <input type="text" id="task-input" placeholder="What would you like to accomplish today?" class="w-full bg-dark-200 border border-dark-300 rounded-lg px-4 py-3 pl-10 focus:outline-none focus:ring-2 focus:ring-primary-600 focus:border-transparent">
                            <i class="fas fa-search absolute left-3 top-3.5 text-gray-500"></i>
                        </div>
                    </div>
                    
                    <div id="task-list" class="space-y-3">
                        <div class="task-item bg-dark-200 rounded-lg p-4 flex items-start hover:bg-dark-100 transition group">
                            <div class="flex items-center h-5">
                                <input type="checkbox" class="w-4 h-4 text-primary-600 rounded border-dark-300 focus:ring-primary-500 bg-dark-400">
                            </div>
                            <div class="ml-3 flex-1">
                                <p class="font-medium">Complete project proposal</p>
                                <p class="text-xs text-gray-500 mt-1">Due today · Work</p>
                            </div>
                            <div class="task-actions opacity-0 group-hover:opacity-100 transition flex space-x-2">
                                <button class="w-6 h-6 rounded-full bg-dark-300 flex items-center justify-center hover:bg-dark-400">
                                    <i class="fas fa-pencil-alt text-xs text-gray-400 hover:text-primary-400"></i>
                                </button>
                                <button class="w-6 h-6 rounded-full bg-dark-300 flex items-center justify-center hover:bg-dark-400">
                                    <i class="fas fa-trash-alt text-xs text-gray-400 hover:text-red-400"></i>
                                </button>
                            </div>
                        </div>
                        
                        <div class="task-item bg-dark-200 rounded-lg p-4 flex items-start hover:bg-dark-100 transition group">
                            <div class="flex items-center h-5">
                                <input type="checkbox" class="w-4 h-4 text-primary-600 rounded border-dark-300 focus:ring-primary-500 bg-dark-400">
                            </div>
                            <div class="ml-3 flex-1">
                                <p class="font-medium text-gray-500 line-through">Team standup meeting</p>
                                <p class="text-xs text-gray-600 mt-1">Completed · 9:00 AM</p>
                            </div>
                            <div class="task-actions opacity-0 group-hover:opacity-100 transition flex space-x-2">
                                <button class="w-6 h-6 rounded-full bg-dark-300 flex items-center justify-center hover:bg-dark-400">
                                    <i class="fas fa-pencil-alt text-xs text-gray-400 hover:text-primary-400"></i>
                                </button>
                                <button class="w-6 h-6 rounded-full bg-dark-300 flex items-center justify-center hover:bg-dark-400">
                                    <i class="fas fa-trash-alt text-xs text-gray-400 hover:text-red-400"></i>
                                </button>
                            </div>
                        </div>
                        
                        <div class="task-item bg-dark-200 rounded-lg p-4 flex items-start hover:bg-dark-100 transition group">
                            <div class="flex items-center h-5">
                                <input type="checkbox" class="w-4 h-4 text-primary-600 rounded border-dark-300 focus:ring-primary-500 bg-dark-400">
                            </div>
                            <div class="ml-3 flex-1">
                                <p class="font-medium">Review analytics dashboard</p>
                                <p class="text-xs text-gray-500 mt-1">Due tomorrow · Analytics</p>
                            </div>
                            <div class="task-actions opacity-0 group-hover:opacity-100 transition flex space-x-2">
                                <button class="w-6 h-6 rounded-full bg-dark-300 flex items-center justify-center hover:bg-dark-400">
                                    <i class="fas fa-pencil-alt text-xs text-gray-400 hover:text-primary-400"></i>
                                </button>
                                <button class="w-6 h-6 rounded-full bg-dark-300 flex items-center justify-center hover:bg-dark-400">
                                    <i class="fas fa-trash-alt text-xs text-gray-400 hover:text-red-400"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Right Column -->
            <div class="space-y-6">
                <!-- Focus Analytics -->
                <div class="gradient-bg rounded-xl p-6 border border-dark-300">
                    <h2 class="text-xl font-semibold mb-6">Focus Analytics</h2>
                    
                    <div class="space-y-4">
                        <div>
                            <div class="flex justify-between text-sm mb-1">
                                <span>Today's Focus</span>
                                <span>2h 45m / 4h goal</span>
                            </div>
                            <div class="w-full bg-dark-300 rounded-full h-2">
                                <div class="bg-primary-600 h-2 rounded-full" style="width: 68%"></div>
                            </div>
                        </div>
                        
                        <div>
                            <div class="flex justify-between text-sm mb-1">
                                <span>Weekly Average</span>
                                <span>3h 12m / 4h goal</span>
                            </div>
                            <div class="w-full bg-dark-300 rounded-full h-2">
                                <div class="bg-primary-400 h-2 rounded-full" style="width: 80%"></div>
                            </div>
                        </div>
                        
                        <div>
                            <div class="flex justify-between text-sm mb-1">
                                <span>Deep Focus Ratio</span>
                                <span>42%</span>
                            </div>
                            <div class="w-full bg-dark-300 rounded-full h-2">
                                <div class="bg-primary-500 h-2 rounded-full" style="width: 42%"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-6">
                        <h3 class="font-medium mb-3">Focus Distribution</h3>
                        <div class="flex justify-between text-xs text-gray-400 mb-1">
                            <span>Morning</span>
                            <span>Afternoon</span>
                            <span>Evening</span>
                        </div>
                        <div class="flex space-x-1 h-20">
                            <div class="flex-1 bg-primary-800 rounded-t-sm" style="height: 80%"></div>
                            <div class="flex-1 bg-primary-600 rounded-t-sm" style="height: 60%"></div>
                            <div class="flex-1 bg-primary-800 rounded-t-sm" style="height: 80%"></div>
                            <div class="flex-1 bg-primary-400 rounded-t-sm" style="height: 40%"></div>
                            <div class="flex-1 bg-primary-200 rounded-t-sm" style="height: 20%"></div>
                            <div class="flex-1 bg-primary-300 rounded-t-sm" style="height: 30%"></div>
                            <div class="flex-1 bg-primary-500 rounded-t-sm" style="height: 50%"></div>
                        </div>
                    </div>
                </div>
                
                <!-- AI Task Summary -->
                <div class="gradient-bg rounded-xl p-6 border border-dark-300">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-semibold">AI Task Summary</h2>
                        <span class="text-xs bg-primary-900 text-primary-300 px-2 py-1 rounded-full">GPT-4</span>
                    </div>
                    
                    <div class="bg-dark-200 rounded-lg p-4 mb-4">
                        <div class="flex items-center mb-2">
                            <i class="fas fa-robot text-primary-500 mr-2"></i>
                            <h3 class="font-medium">Priority Tasks</h3>
                        </div>
                        <p class="text-sm text-gray-300">1. Complete project proposal (due today)<br>2. Client meeting preparation (2pm)<br>3. Review quarterly metrics</p>
                    </div>
                    
                    <div class="bg-dark-200 rounded-lg p-4">
                        <div class="flex items-center mb-2">
                            <i class="fas fa-lightbulb text-primary-500 mr-2"></i>
                            <h3 class="font-medium">Suggestions</h3>
                        </div>
                        <p class="text-sm text-gray-300">• Batch your email responses after lunch<br>• Schedule creative work during your peak focus hours (9-11am)<br>• Take a 5-minute movement break every hour</p>
                    </div>
                    
                    <button id="generate-summary" class="mt-4 w-full py-2 bg-primary-600 hover:bg-primary-700 rounded-lg font-medium flex items-center justify-center">
                        <i class="fas fa-magic mr-2"></i> Generate New Summary
                    </button>
                </div>
                
                <!-- Quick Actions -->
                <div class="gradient-bg rounded-xl p-6 border border-dark-300">
                    <h2 class="text-xl font-semibold mb-4">Quick Actions</h2>
                    
                    <div class="grid grid-cols-2 gap-3">
                        <button class="bg-dark-200 hover:bg-dark-100 rounded-lg p-3 flex flex-col items-center">
                            <div class="w-10 h-10 bg-primary-900 rounded-full flex items-center justify-center mb-2">
                                <i class="fas fa-music text-primary-400"></i>
                            </div>
                            <span class="text-sm">Focus Music</span>
                        </button>
                        
                        <button class="bg-dark-200 hover:bg-dark-100 rounded-lg p-3 flex flex-col items-center">
                            <div class="w-10 h-10 bg-primary-900 rounded-full flex items-center justify-center mb-2">
                                <i class="fas fa-book text-primary-400"></i>
                            </div>
                            <span class="text-sm">Journal</span>
                        </button>
                        
                        <button class="bg-dark-200 hover:bg-dark-100 rounded-lg p-3 flex flex-col items-center">
                            <div class="w-10 h-10 bg-primary-900 rounded-full flex items-center justify-center mb-2">
                                <i class="fas fa-bolt text-primary-400"></i>
                            </div>
                            <span class="text-sm">Energy Boost</span>
                        </button>
                        
                        <button class="bg-dark-200 hover:bg-dark-100 rounded-lg p-3 flex flex-col items-center">
                            <div class="w-10 h-10 bg-primary-900 rounded-full flex items-center justify-center mb-2">
                                <i class="fas fa-cloud-moon text-primary-400"></i>
                            </div>
                            <span class="text-sm">Wind Down</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Task Modal -->
    <div id="task-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-dark-200 rounded-xl p-6 w-full max-w-md">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold">Add New Task</h3>
                <button id="close-modal" class="text-gray-400 hover:text-gray-300">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium mb-1">Task Name</label>
                    <input type="text" class="w-full bg-dark-300 border border-dark-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-600 focus:border-transparent">
                </div>
                
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium mb-1">Due Date</label>
                        <input type="date" class="w-full bg-dark-300 border border-dark-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-600 focus:border-transparent">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium mb-1">Category</label>
                        <select class="w-full bg-dark-300 border border-dark-400 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-600 focus:border-transparent">
                            <option>Work</option>
                            <option>Personal</option>
                            <option>Health</option>
                            <option>Learning</option>
                        </select>
                    </div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium mb-1">Priority</label>
                    <div class="flex space-x-2">
                        <button class="px-3 py-1 bg-dark-300 text-gray-400 rounded-full text-sm hover:bg-red-900 hover:text-red-400">High</button>
                        <button class="px-3 py-1 bg-dark-300 text-gray-400 rounded-full text-sm hover:bg-yellow-900 hover:text-yellow-400">Medium</button>
                        <button class="px-3 py-1 bg-dark-300 text-gray-400 rounded-full text-sm hover:bg-green-900 hover:text-green-400">Low</button>
                    </div>
                </div>
                
                <div class="pt-2">
                    <button class="w-full py-2 bg-primary-600 hover:bg-primary-700 rounded-lg font-medium">Add Task</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Pomodoro Timer Functionality
        let timer;
        let timeLeft = 25 * 60; // 25 minutes in seconds
        let isRunning = false;
        let currentMode = 'pomodoro'; // 'pomodoro', 'shortBreak', 'longBreak'
        let pomodoroCount = 0;
        
        const timeDisplay = document.getElementById('time-display');
        const startPauseBtn = document.getElementById('start-pause-btn');
        const progressCircle = document.getElementById('progress-circle');
        const pomodoroBtn = document.getElementById('pomodoroBtn');
        const shortBreakBtn = document.getElementById('shortBreakBtn');
        const longBreakBtn = document.getElementById('longBreakBtn');
        const skipBtn = document.getElementById('skip-btn');
        const pomodoroCountEl = document.getElementById('pomodoro-count');
        
        function updateTimerDisplay() {
            const minutes = Math.floor(timeLeft / 60);
            const seconds = timeLeft % 60;
            timeDisplay.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
            
            // Update progress circle
            const circumference = 2 * Math.PI * 40;
            let offset;
            if (currentMode === 'pomodoro') {
                offset = circumference - (timeLeft / (25 * 60)) * circumference;
            } else if (currentMode === 'shortBreak') {
                offset = circumference - (timeLeft / (5 * 60)) * circumference;
            } else {
                offset = circumference - (timeLeft / (15 * 60)) * circumference;
            }
            progressCircle.style.strokeDashoffset = offset;
        }
        
        function startTimer() {
            if (!isRunning) {
                isRunning = true;
                startPauseBtn.innerHTML = '<i class="fas fa-pause mr-2"></i> Pause';
                startPauseBtn.classList.remove('pulse-animation');
                
                timer = setInterval(() => {
                    timeLeft--;
                    updateTimerDisplay();
                    
                    if (timeLeft <= 0) {
                        clearInterval(timer);
                        isRunning = false;
                        
                        // Play sound
                        const audio = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-alarm-digital-clock-beep-989.mp3');
                        audio.play();
                        
                        if (currentMode === 'pomodoro') {
                            pomodoroCount++;
                            pomodoroCountEl.textContent = pomodoroCount;
                            
                            // Show notification
                            if (pomodoroCount % 4 === 0) {
                                alert('Great job! You completed 4 pomodoros. Time for a long break!');
                                setMode('longBreak');
                            } else {
                                alert('Pomodoro completed! Take a short break.');
                                setMode('shortBreak');
                            }
                        } else {
                            alert('Break is over! Time to focus again.');
                            setMode('pomodoro');
                        }
                    }
                }, 1000);
            } else {
                pauseTimer();
            }
        }
        
        function pauseTimer() {
            clearInterval(timer);
            isRunning = false;
            startPauseBtn.innerHTML = '<i class="fas fa-play mr-2"></i> Start';
            startPauseBtn.classList.add('pulse-animation');
        }
        
        function resetTimer() {
            clearInterval(timer);
            isRunning = false;
            startPauseBtn.innerHTML = '<i class="fas fa-play mr-2"></i> Start';
            startPauseBtn.classList.add('pulse-animation');
            updateTimerDisplay();
        }
        
        function setMode(mode) {
            currentMode = mode;
            
            // Reset button states
            pomodoroBtn.classList.remove('bg-primary-600', 'text-white');
            pomodoroBtn.classList.add('bg-dark-300', 'text-gray-400');
            shortBreakBtn.classList.remove('bg-primary-600', 'text-white');
            shortBreakBtn.classList.add('bg-dark-300', 'text-gray-400');
            longBreakBtn.classList.remove('bg-primary-600', 'text-white');
            longBreakBtn.classList.add('bg-dark-300', 'text-gray-400');
            
            // Set new mode
            if (mode === 'pomodoro') {
                timeLeft = 25 * 60;
                pomodoroBtn.classList.add('bg-primary-600', 'text-white');
                pomodoroBtn.classList.remove('bg-dark-300', 'text-gray-400');
            } else if (mode === 'shortBreak') {
                timeLeft = 5 * 60;
                shortBreakBtn.classList.add('bg-primary-600', 'text-white');
                shortBreakBtn.classList.remove('bg-dark-300', 'text-gray-400');
            } else {
                timeLeft = 15 * 60;
                longBreakBtn.classList.add('bg-primary-600', 'text-white');
                longBreakBtn.classList.remove('bg-dark-300', 'text-gray-400');
            }
            
            resetTimer();
        }
        
        // Event Listeners
        startPauseBtn.addEventListener('click', startTimer);
        pomodoroBtn.addEventListener('click', () => setMode('pomodoro'));
        shortBreakBtn.addEventListener('click', () => setMode('shortBreak'));
        longBreakBtn.addEventListener('click', () => setMode('longBreak'));
        skipBtn.addEventListener('click', () => {
            if (confirm('Are you sure you want to skip this session?')) {
                if (currentMode === 'pomodoro') {
                    setMode('shortBreak');
                } else {
                    setMode('pomodoro');
                }
            }
        });
        
        // Initialize
        updateTimerDisplay();
        
        // Task Modal Functionality
        const taskModal = document.getElementById('task-modal');
        const addTaskBtn = document.getElementById('add-task-btn');
        const closeModalBtn = document.getElementById('close-modal');
        
        addTaskBtn.addEventListener('click', () => {
            taskModal.classList.remove('hidden');
        });
        
        closeModalBtn.addEventListener('click', () => {
            taskModal.classList.add('hidden');
        });
        
        // Close modal when clicking outside
        taskModal.addEventListener('click', (e) => {
            if (e.target === taskModal) {
                taskModal.classList.add('hidden');
            }
        });
        
        // AI Summary Generation
        const refreshInsights = document.getElementById('refreshInsights');
        const generateSummary = document.getElementById('generate-summary');
        const aiSummary = document.getElementById('aiSummary');
        
        const insights = [
            "Your focus duration has improved by 15% compared to last week. Keep maintaining this momentum!",
            "You're most productive between 10 AM to 12 PM. Schedule your most challenging tasks during this window.",
            "Your task completion rate is 72% this week, higher than your 65% average. Well done!",
            "Try grouping similar tasks together to reduce context switching and improve efficiency.",
            "You've completed 18 pomodoros this week. Consider taking longer breaks after every 4 sessions."
        ];
        
        const summaries = [
            "1. Finalize client presentation (due today)\n2. Team sync meeting (3pm)\n3. Review project timeline",
            "1. Complete budget analysis\n2. Respond to client emails\n3. Schedule 1:1 with team members",
            "1. Prepare for quarterly review\n2. Update project documentation\n3. Research new productivity tools"
        ];
        
        const suggestions = [
            "• Try the 2-minute rule for quick tasks\n• Schedule creative work during your peak hours\n• Take a 5-minute walk every hour",
            "• Batch process emails twice a day\n• Use voice notes for quick ideas capture\n• Try ambient noise for deep focus sessions",
            "• Start with most important task (MIT)\n• Use time blocking for complex projects\n• Practice 4-7-8 breathing between tasks"
        ];
        
        refreshInsights.addEventListener('click', () => {
            aiSummary.textContent = "Analyzing your productivity patterns...";
            refreshInsights.innerHTML = '<i class="fas fa-circle-notch fa-spin mr-1"></i> Generating';
            
            setTimeout(() => {
                const randomInsight = insights[Math.floor(Math.random() * insights.length)];
                aiSummary.textContent = randomInsight;
                refreshInsights.innerHTML = '<i class="fas fa-sync-alt mr-1"></i> Generate New Insights';
            }, 1500);
        });
        
        generateSummary.addEventListener('click', () => {
            generateSummary.innerHTML = '<i class="fas fa-circle-notch fa-spin mr-2"></i> Generating';
            
            setTimeout(() => {
                const randomSummary = summaries[Math.floor(Math.random() * summaries.length)];
                const randomSuggestion = suggestions[Math.floor(Math.random() * suggestions.length)];
                
                document.querySelector('#ai-task-summary .text-sm').textContent = randomSummary;
                document.querySelector('#ai-suggestions .text-sm').textContent = randomSuggestion;
                
                generateSummary.innerHTML = '<i class="fas fa-magic mr-2"></i> Generate New Summary';
                
                // Show notification
                const notification = document.createElement('div');
                notification.className = 'fixed bottom-4 right-4 bg-primary-700 text-white px-4 py-2 rounded-lg shadow-lg flex items-center';
                notification.innerHTML = '<i class="fas fa-check-circle mr-2"></i> New summary generated!';
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    notification.classList.add('opacity-0', 'transition', 'duration-500');
                    setTimeout(() => notification.remove(), 500);
                }, 3000);
            }, 2000);
        });
        
        // Task completion functionality
        const taskCheckboxes = document.querySelectorAll('.task-item input[type="checkbox"]');
        taskCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const taskItem = this.closest('.task-item');
                const taskText = taskItem.querySelector('p:first-child');
                
                if (this.checked) {
                    taskText.classList.add('line-through', 'text-gray-500');
                    taskText.classList.remove('font-medium');
                    
                    // Update completed time
                    const now = new Date();
                    const timeString = now.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
                    const timeElement = taskItem.querySelector('p:last-child');
                    timeElement.textContent = `Completed · ${timeString}`;
                    timeElement.classList.add('text-gray-600');
                    timeElement.classList.remove('text-gray-500');
                    
                    // Move to bottom
                    setTimeout(() => {
                        const taskList = document.getElementById('task-list');
                        taskList.appendChild(taskItem);
                    }, 300);
                } else {
                    taskText.classList.remove('line-through', 'text-gray-500');
                    taskText.classList.add('font-medium');
                    
                    const timeElement = taskItem.querySelector('p:last-child');
                    timeElement.textContent = timeElement.textContent.replace('Completed · ', 'Due ') + ' · Work';
                    timeElement.classList.remove('text-gray-600');
                    timeElement.classList.add('text-gray-500');
                }
            });
        });
        
        // Simulate initial AI summary generation
        setTimeout(() => {
            generateSummary.click();
        }, 1000);
    </script>
</body>
</html>
